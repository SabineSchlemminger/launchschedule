name: Lint, Test, Build, Deploy

on:
  push:
  workflow_dispatch:

jobs:
  baptize:
    name: Determine Release Name
    runs-on: ubuntu-latest
    steps:
      - name: Setup Node
        uses: actions/setup-node@v1.4.3
      - name: Setup Totemize
        run: npm install -g totemize
      - name: Create Release Name Variable using Totemize
        run: echo "::set-env name=RELEASE_NAME::`totemize -s '-'`"
      - name: Update Tag
        uses: richardsimko/update-tag@v1.0.3
        with:
          tag_name: ${{ env.RELEASE_NAME }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Create Version File
        run: echo "${{ env.RELEASE_NAME }}" > version
      - name: Safe Version File Artifact
        uses: actions/upload-artifact@v2.1.4
        with:
          name: version
          path: ./version
  fetch:
    name: Fetch Data
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Node
        uses: actions/setup-node@v1.4.3
      - name: Fetch Launches
        run: node fetchLaunches.ts
      - name: Safe Data Artifact
        uses: actions/upload-artifact@v2.1.4
        with:
          name: data
          path: src/app/data/
  build:
    name: Build Web & Android
    runs-on: ubuntu-latest
    needs: [fetch, baptize]
    steps:
      - name: Download Version
        uses: actions/download-artifact@v2.0.5
        with:
          name: version
          path: ./
      - name: Test Release Name
        run: cat ./version
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Node
        uses: actions/setup-node@v1.4.3
      - name: Setup Angular
        run: npm install -g @angular/cli
      - name: Setup Ionic
        run: npm install -g @ionic/cli
      - name: NPM Install
        run: npm install
      - name: Download Launches
        uses: actions/download-artifact@v2.0.5
        with:
          name: data
          path: src/app/data/
      - name: Build with Ionic
        run: ionic build --prod
      - name: Capacitor Update
        run: npx cap update android
      - name: Capacitor Copy
        run: npx cap copy
      - name: Safe www Artifact
        uses: actions/upload-artifact@v2.1.4
        with:
          name: www
          path: www/
      - name: Setup JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Build with Gradle
        run: cd android && chmod +x gradlew && ./gradlew bundleRelease
      - name: Safe Unsigned Release Bundle Artifact
        uses: actions/upload-artifact@v2.1.4
        with:
          name: app-bundle-unsigned
          path: android/app/build/outputs/bundle/release/app-release.aab
  sign:
    name: Sign Android Artifact
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download Unsigned Release Bundle Artifact
        uses: actions/download-artifact@v2.0.5
        with:
          name: app-bundle-unsigned
          path: ./
      - name: Sign Bundle
        uses: r0adkll/sign-android-release@v1
        with:
          releaseDirectory: ./
          signingKeyBase64: ${{ secrets.ANDROID_SIGNING_KEY }}
          alias: ${{ secrets.ANDROID_KEY_ALIAS }}
          keyStorePassword: ${{ secrets.ANDROID_KEY_STORE_PASSWORD }}
          keyPassword: ${{ secrets.ANDROID_KEY_PASSWORD }}
      - name: Safe Signed Release Bundle Artifact
        uses: actions/upload-artifact@v2.1.4
        with:
          name: app-bundle-signed
          path: ./app-release.aab
  releaseProd:
    name: Upload to Google Play Production
    runs-on: ubuntu-latest
    needs: [sign, lint, test]
    if: github.ref == 'refs/heads/master'
    steps:
      - name: Download Signed Release Bundle Artifact
        uses: actions/download-artifact@v2.0.5
        with:
          name: app-bundle-signed
          path: ./
      - name: Upload to Google Play
        uses: r0adkll/upload-google-play@v1.0.4
        with:
          serviceAccountJsonPlainText: ${{ secrets.SERVICE_ACCOUNT_JSON }}
          packageName: de.th105.launchschedule
          releaseFile: ./app-release.aab
  releaseDev:
    name: Upload to Google Play Beta
    runs-on: ubuntu-latest
    needs: [sign, test]
    if: github.ref == 'refs/heads/dev'
    steps:
      - name: Download Signed Release Bundle Artifact
        uses: actions/download-artifact@v2.0.5
        with:
          name: app-bundle-signed
          path: ./
      - name: Upload to Google Play
        uses: r0adkll/upload-google-play@v1.0.4
        with:
          serviceAccountJsonPlainText: ${{ secrets.SERVICE_ACCOUNT_JSON }}
          packageName: de.th105.launchschedule
          releaseFile: ./app-release.aab
          track: beta
  dockerProd:
    name: Build and Push docker latest
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/master'
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Download www
        uses: actions/download-artifact@v2.0.5
        with:
          name: www
          path: www/
      - name: Build and Push the Dockerfile
        uses: docker/build-push-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          repository: theidasch/schedule
          tags: latest
  dockerDev:
    name: Build and Push docker dev
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/dev'
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Download www
        uses: actions/download-artifact@v2.0.5
        with:
          name: www
          path: www/
      - name: Build and Push the Dockerfile
        uses: docker/build-push-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          repository: theidasch/schedule
          tags: dev
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Node
        uses: actions/setup-node@v1.4.3
      - name: Setup Angular
        run: npm install -g @angular/cli
      - name: Setup Ionic
        run: npm install -g @ionic/cli
      - name: NPM Install
        run: npm install
      - name: Run Lint
        run: ng lint
  test:
    name: Tests
    runs-on: ubuntu-latest
    needs: fetch
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Node
        uses: actions/setup-node@v1.4.3
      - name: Setup Angular
        run: npm install -g @angular/cli
      - name: Setup Ionic
        run: npm install -g @ionic/cli
      - name: NPM Install
        run: npm install
      - name: Download Launches
        uses: actions/download-artifact@v2.0.5
        with:
          name: data
          path: src/app/data/
      - name: Run Test
        run: npm run test
